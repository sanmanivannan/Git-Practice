git init
=========
1. git init command is used when a project is started freshly and wanted to be created in the git project
 NOTE: If any project is Cloned or Downloaded from the GITHUB/GITLAB, then the "git init" command may not be used as its already initialized

2. when "git init: command is executed initially during a normal project turning to the git project; a hidded file called .git file is created and placed on the git file

what is inside the .git file and why its important:
-----------------------------------------------------
The . git folder contains all the information that is necessary for your project in version control and all the information about commits, remote repository address, etc. 
All of them are present in this folder. It also contains a log that stores your commit history so that you can roll back to history.

git config
===========
this is used to configure the user who is using the git on that PC who is going to work on the git projects

git config --global user.name "username"
git config --global user.email "useremail"


git Clone
===========

git clone <HTTPS/SSH>

git add
=========



git commit
============


git status
===========


git login
===========


git and github SSH connection setup
====================================
git(local) and the github(remote repo) should always be connected to the seemless connectivity to make the transaction between those 2
For which we need to setup the SSH connectivity between those 2, else eveytime when we try to push/pull data between those 2, we should provide the username and password
Just to avoid those manual process, we need to setup the SSH  connectivity 
NOTE: Do only the SSH setup in your PC or Trusted systems(DONT setup on the PUBLIC PCs)

ssh-keygen


.gitignore
==========
.gitignore is the the hidden file within the GIT repository(which we need to manually create)
Is use to have the librarys, dependencies and other unwanted file which doesnt need need to be git commited
All the files inside the .gitignore file would be omited/ignored while the commits are done

git reset
===========
git reset is used to remove the files from the staging already


git reset <filename>

when only "git reset" command is provided everything on the staging will be removed


git log
=========
git-diff - Show changes between commits, commit and working tree, etc

Basically, it would display the differences of changes on the staging area and the .git directory/repository


git remote
===========
git remote command is used to add/link the git remote repository to the locak repository
eg:
git remote add origin <GIT HUB URL>

you can also add multiple remote origins, like
git remote add origin1 <git hib url>

Once the git remote is linked, next is the PULL and PUSH data from/to the remote repository

GIT PULL (fetch + merge)
============
git pull origin <master/branch name>

Note: THis will work only after adding the the remote repo to our local, as mentioned on the above"git remote" section


GIT PUSH
==========
git push origin <master/ branchname>


GIT MERGE (HEAD/local repo/commitstage to workingspace)
========================================================
This command is used to merge the brances to each other, for example if you could like to merge a branch to the master branch
First, go the master branch by using the command - git checkout master
After which, git merge <branchname> master (this command will merge <branchname> to the master branch)

Similarly, if you like tto merge branch 2 to branch 1. Go to branch 1 by using the checkout command
and then use $git merge branch2(source) branch1(destination)


GIT fetch(fetching the data from remote repo to the localcommitstate/local repo)
==========

































